name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push-docker-image:
    runs-on: ubuntu-latest

    # needs: [build]

    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/satnbot:latest

      - name: Deploy to EC2 via SSH
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          user: ${{ secrets.EC2_SERVER_USERNAME }}
          # if error 'ssh: handshake failed: ssh: unable to...' then add 'CASignatureAlgorithms +ssh-rsa' to /etc/ssh/sshd_config
          key: ${{ secrets.EC2_SERVER_SSH_PRIVATE_KEY }}
          #password: ${{ secrets.EC2_SERVER_PASSWORD }}
          command: |
            CI=true docker ps -q
            CI=true docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            CI=true docker stop ${{ secrets.DOCKER_HUB_USERNAME }}/satnbot
            CI=true docker stop satnbot
            CI=true docker image prune -a -f
            CI=true docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/satnbot:latest
            # CI=true docker run --rm --name satnbot -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} ${{ secrets.DOCKER_HUB_USERNAME }}/satnbot
